# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
}
#' Calculation of Shannon's Entropy
#'
#' @param x a numeric probability vector.
#' @param base a character string specifying the logarithm unit. The default
#'   value is 2.
#'
#' @return a numeric value representing Shannon's Entropy
CalEntropy <- function(x, base = 2){
# Check the the validity of input probability distributions
if (anyNA(x)){
stop("The input vector includes NA values.")
}
if (max(x) >1 | min(x) <0) {
stop("The probability values are not between: [0,1].")
}
if (sum(x) > 1.001) {
stop("The probability distribution does not sum to 1.")
}
entropy <- -sum(x[x != 0]*log(x[x != 0], base = base))
return(entropy)
}
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
}
(111.6/77)*20
(111.6/77)*21
(111.6/77)*31
(111.6/77)*26
devtools::build()
devtools::install()
#
setClass("STFeature",
slots = list(
Position = "data.frame",
CellEnrich = "data.frame",
CellColocal = "data.frame",
GsetSig = "list",
SpeGenes = "list",
LRscore = "data.frame",
CNV = "data.frame",
PhenoScore = "data.frame",
Annotation = "data.frame",
Others = "ANY"))
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
}
View(stf.lt)
head(stf.lt$GSM5924046_frozen_b_1@Others$Imm.infil)
head(Imm.infil)
sam = GSM5924046_frozen_b_1
sam = "GSM5924046_frozen_b_1"
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data[1:5,1:5]
cell.abun[1:5,1:5]
data <- t(data)
data[1:5,1:5]
a = stf@CellAnno
a[1:5,1:5]
setClass("STFeature",
slots = list(
Position = "data.frame",
CellAnno = "data.frame",
CellCodis = "data.frame",
ImmInfil = "data.frame",
GsetSig = "list",
SpeGenes = "list",
LRscore = "data.frame",
PhenoScore = "data.frame",
Annotation = "data.frame",
Others = "ANY"))
stf <- CreateStfObj(st = st, assay = "SCT", slot = "data", stf = stf,
cell.anno = cell.abun, min.prop = 0.05,
init.fea = c("Position", "CellAnno", "CellCodis"))
data[1:5,1:5]
data <- stf@CellAnno[, immune.cells]
head(stf.lt$GSM5924046_frozen_b_1@Others$Imm.infil)
## The degree of immune infiltration
## Immune cells with a proportion less than 0.05 will not be considered for immune infiltration
Imm.infil <- CalImmInfiltration(data, min.prop = 0.05)
head(Imm.infil)
stf@CellAnno[1:5,1:5]
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data[1:5,1:5]
outdir <- "/NFS_home/NFS_home_2/chengxj/ST_scRNAseq/GSE175540/pipeline/"
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
SpotVisualize(st = Spatial.list$GSM5924046_frozen_b_1,
meta = stf.lt$GSM5924046_frozen_b_1@Others$imminf$imm.enrich,
size = 3,
title = "Immune enrichment",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "imm.enrich.pdf"))
SpotVisualize(st = Spatial.list$GSM5924046_frozen_b_1,
meta = stf.lt$GSM5924046_frozen_b_1@Others$imminf$imm.diver,
size = 3,
title = "Immune diversity",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "_imm.diver.pdf"))
}
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$imminf$imm.enrich,
size = 3,
title = "Immune enrichment",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "imm.enrich.pdf"))
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$imminf$imm.diver,
size = 3,
title = "Immune diversity",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "_imm.diver.pdf"))
}
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$imminf$imm.enrich,
size = 3,
title = "Immune enrichment",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "imm.enrich.pdf"))
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$imminf$imm.diver,
size = 3,
title = "Immune diversity",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "_imm.diver.pdf"))
}
for (sam in names(stf.lt)) {
print(sam)
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
data <- data[, immune.cells]
# # immune abundance
# imm.enrich <- rowSums(data)
# # immune diversity
# CellCodis <- CalCellCodis(data, sort = T)
# imm.diver <- apply(CellCodis, 1, function(x){
#   sum(x >= 0.1)
# })
# imm.diver <- imm.diver/ncol(CellCodis)
# imm.diver <- round(imm.diver, 2)
# stf.lt[[sam]]@Others <- list(data = data.frame(data, check.names = F),
#                              CellCodis = data.frame(CellCodis, check.names = F),
#                              imminf = data.frame(imm.enrich, imm.diver))
stf.lt[[sam]]@Others[["Imm.infil"]] <- CalImmInfiltration(data, min.prop = 0.05)
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$Imm.infil$Imm.enrichment,
size = 3,
title = "Immune enrichment",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "_imm.enrich.pdf"))
SpotVisualize(pos = stf.lt[[sam]]@Position,
meta = stf.lt[[sam]]@Others$Imm.infil$Imm.diversity,
size = 3,
title = "Immune diversity",
legend.name = "Score",
p.width = 8, p.height = 8,
legend.text = element_text(size=18),
legend.title = element_text(size=20),
savefile = paste0(outdir, "Immune.infil/", sam, "_imm.diver.pdf"))
}
dim(cell.abun)
table(colnames(cell.abun)==colnames(stf.lt$GSM5924046_frozen_b_1@Others$data))
colnames(cell.abun)
colnames(stf.lt$GSM5924046_frozen_b_1@Others$data)
sam = "GSM5924046_frozen_b_1"
data <- stf.lt[[sam]]@CellEnrich[, celltypes]
colnames(data)
data <- aggregate(t(data), by = list(names(celltypes)), sum) %>%
tibble::column_to_rownames("Group.1")
data <- t(data)
saveRDS(data, "/NFS_home/NFS_home_2/chengxj/ST_scRNAseq/SpaTME/test_data/cell.abun.rds",h)
table(data<0.05)
table(data==0)
saveRDS(data, "/NFS_home/NFS_home_2/chengxj/ST_scRNAseq/SpaTME/test_data/cell.abun.rds")
# Distribution of cells in domains
data = Reduce(cbind, stf.lt$GSM5924046_frozen_b_1@Others[c("Imm.infil", "cellColocal")])
data = Norm01(data)
colnames(data)[1:2] <- c("Immune enrichment", "Immune diversity")
diff.cells <- PhenoAssoFeatures(data = t(data),
phenotype = paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster),
method = "wilcox",
p.adj = T, p.adj.cut = 1)
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
colnames(diff.mean) <- c("group", colnames(data))
diff.mean <-reshape2::melt(diff.mean, id = 1)
colnames(diff.mean) <- c("Group", colnames(data))
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
colnames(diff.mean) <- c("Group", colnames(data))
diff.mean <-reshape2::melt(diff.mean, id = 1)
colnames(diff.mean) <- c("Group", "Features", "Mean")
data <- merge(diff.mean, diff.cells)
#data[, "Significance"] <- ifelse(data$p.adj<= 0.05, "Y", "N")
theme.set <- theme(
panel.grid.major.y=element_blank(),
panel.grid.minor.y=element_blank(),
panel.background = element_blank(),
text = element_text(colour = "black"),
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title=element_text(hjust =0.5, size = 12),
axis.line.y=element_line(linetype=1,color='black'),
axis.line.x=element_line(linetype=1,color='black'),
legend.text=element_text(size=12),
legend.title = element_text(size=14),
axis.text=element_text(size=14),
axis.title.y = element_blank(),
axis.title.x = element_blank()
)
data[, "facet_group"] <- ifelse(data$features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
data <- add_significance(data, "p.adj", "Significance")
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
library(rstatix)
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
outdir <- "/NFS_home/NFS_home_2/chengxj/ST_scRNAseq/pipeline/"
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
library(cowplot)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
data <- merge(diff.mean, diff.cells)
View(data)
View(diff.cells)
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
# Distribution of cells in domains
data = Reduce(cbind, stf.lt$GSM5924046_frozen_b_1@Others[c("Imm.infil", "cellColocal")])
data = Norm01(data)
colnames(data)[1:2] <- c("Immune enrichment", "Immune diversity")
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
View(diff.mean)
colnames(diff.mean) <- c("Group", colnames(data))
diff.mean <-reshape2::melt(diff.mean, id = 1)
colnames(diff.mean) <- c("Group", "Features", "Mean")
data <- merge(diff.mean, diff.cells)
View(data)
data[, "facet_group"] <- ifelse(data$features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
data <- add_significance(data, "p.adj", "Significance")
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = Features, y = Group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = Features, y = Group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
data[, "facet_group"] <- ifelse(data$Features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = Features, y = Group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = Features, y = Group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
# Distribution of cells in domains
data = Reduce(cbind, stf.lt$GSM5924046_frozen_b_1@Others[c("Imm.infil", "cellColocal")])
data = Norm01(data)
colnames(data)[1:2] <- c("Immune enrichment", "Immune diversity")
diff.cells <- PhenoAssoFeatures(data = t(data),
phenotype = paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster),
method = "wilcox",
p.adj = T, p.adj.cut = 1)
View(diff.cells)
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
colnames(diff.mean) <- c("Group", colnames(data))
diff.mean <-reshape2::melt(diff.mean, id = 1)
colnames(diff.mean) <- c("Group", "Features", "Mean")
data <- merge(diff.mean, diff.cells)
View(data)
colnames(diff.mean) <- c("group", colnames(data))
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
colnames(diff.mean) <- c("group", colnames(data))
# Distribution of cells in domains
data = Reduce(cbind, stf.lt$GSM5924046_frozen_b_1@Others[c("Imm.infil", "cellColocal")])
data = Norm01(data)
colnames(data)[1:2] <- c("Immune enrichment", "Immune diversity")
diff.mean <- aggregate(data, by = list(paste0("Domain", stf.lt$GSM5924046_frozen_b_1@Annotation$bayes_cluster)),
mean) #%>% tibble::column_to_rownames("Group.1")
colnames(diff.mean) <- c("group", colnames(data))
diff.mean <-reshape2::melt(diff.mean, id = 1)
colnames(diff.mean) <- c("group", "Features", "Mean")
data <- merge(diff.mean, diff.cells)
View(data)
data[, "facet_group"] <- ifelse(data$Features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
data <- add_significance(data, "p.adj", "Significance")
# library(rstatix)
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = Features, y = group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = Features, y = group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
table(data$Significance)
colnames(diff.mean) <- c("group", "features", "Mean")
data <- merge(diff.mean, diff.cells)
data[, "facet_group"] <- ifelse(data$Features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
data <- add_significance(data, "p.adj", "Significance")
# library(rstatix)
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
View(data)
data[, "facet_group"] <- ifelse(data$features %in% c("Immune enrichment", "Immune diversity"), "Immune infiltration", "Immune cell distribution")
data <- add_significance(data, "p.adj", "Significance")
# library(rstatix)
data[,"Significance"] <- factor(data$Significance, levels = c("ns", "*","**","***","****"))
p1 <- ggplot(data = subset(data, facet_group == "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
theme(plot.margin = unit(c(8,8,24,8), "mm")) +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme.set +
guides(color = guide_colorbar(order = 1),size = guide_legend(order = 2)) +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
p2 <- ggplot(data = subset(data, facet_group != "Immune infiltration"), aes(x = features, y = group, color = Mean, size = Significance)) +
geom_point() +
scale_color_gradientn(colors = c("#336699", "#c32f27")) +
theme(plot.margin = unit(c(8,8,8,3), "mm"), axis.text.y = element_blank()) +
theme.set +
scale_size_manual(values = c(1,3,4,5,6), labels = c("ns", "*", "**", "***", "****"), drop = FALSE)
pdf(paste0(outdir, "Cell_distribution/GSM5924046_frozen_b_1_Bubble.pdf"), width = 11,height = 6)
plot_grid(p1, p2, rel_widths = c(2, 3))
dev.off()
